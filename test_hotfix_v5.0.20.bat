@echo off
echo ========================================
echo TESTING HOTFIX V5.0.20 - UPDATE NOTIFIER
echo ========================================
echo.

echo üîç Verificando implementaci√≥n del sistema de notificaciones...
echo.

REM Test 1: Verificar creaci√≥n de updateChecker.js
echo ‚úÖ Test 1: Verificaci√≥n de updateChecker.js
if exist "src\background\updateChecker.js" (
    echo    ‚úì Archivo updateChecker.js creado
) else (
    echo    ‚ùå ERROR: updateChecker.js no encontrado
)
echo.

REM Test 2: Verificar import en main.js
echo ‚úÖ Test 2: Verificaci√≥n de import en main.js
findstr /C:"import { updateChecker }" "src\background\main.js" >nul
if %errorlevel%==0 (
    echo    ‚úì updateChecker importado en main.js
) else (
    echo    ‚ùå ERROR: Import de updateChecker no encontrado
)
echo.

REM Test 3: Verificar inicializaci√≥n en main.js
echo ‚úÖ Test 3: Verificaci√≥n de inicializaci√≥n
findstr /C:"updateChecker.initialize()" "src\background\main.js" >nul
if %errorlevel%==0 (
    echo    ‚úì updateChecker.initialize() presente
) else (
    echo    ‚ùå ERROR: Inicializaci√≥n no encontrada
)
echo.

REM Test 4: Verificar banner HTML
echo ‚úÖ Test 4: Verificaci√≥n de banner HTML
findstr /C:"update-banner" "src\popup.html" >nul
if %errorlevel%==0 (
    echo    ‚úì Banner HTML presente en popup
) else (
    echo    ‚ùå ERROR: Banner HTML no encontrado
)
echo.

REM Test 5: Verificar estilos CSS
echo ‚úÖ Test 5: Verificaci√≥n de estilos CSS
findstr /C:".update-banner" "src\popup.css" >nul
if %errorlevel%==0 (
    echo    ‚úì Estilos del banner presentes
) else (
    echo    ‚ùå ERROR: Estilos del banner no encontrados
)
echo.

REM Test 6: Verificar funci√≥n checkForUpdates en popup.js
echo ‚úÖ Test 6: Verificaci√≥n de checkForUpdates
findstr /C:"checkForUpdates" "src\popup.js" >nul
if %errorlevel%==0 (
    echo    ‚úì Funci√≥n checkForUpdates implementada
) else (
    echo    ‚ùå ERROR: checkForUpdates no encontrada
)
echo.

REM Test 7: Verificar funci√≥n showUpdateBanner
echo ‚úÖ Test 7: Verificaci√≥n de showUpdateBanner
findstr /C:"showUpdateBanner" "src\popup.js" >nul
if %errorlevel%==0 (
    echo    ‚úì Funci√≥n showUpdateBanner implementada
) else (
    echo    ‚ùå ERROR: showUpdateBanner no encontrada
)
echo.

REM Test 8: Verificar setupUpdateBannerButtons
echo ‚úÖ Test 8: Verificaci√≥n de setupUpdateBannerButtons
findstr /C:"setupUpdateBannerButtons" "src\popup.js" >nul
if %errorlevel%==0 (
    echo    ‚úì Funci√≥n setupUpdateBannerButtons implementada
) else (
    echo    ‚ùå ERROR: setupUpdateBannerButtons no encontrada
)
echo.

REM Test 9: Verificar GitHub API endpoint
echo ‚úÖ Test 9: Verificaci√≥n de GitHub API
findstr /C:"api.github.com/repos" "src\background\updateChecker.js" >nul
if %errorlevel%==0 (
    echo    ‚úì GitHub API endpoint configurado
) else (
    echo    ‚ùå ERROR: GitHub API endpoint no encontrado
)
echo.

REM Test 10: Verificar intervalo de verificaci√≥n (6 horas)
echo ‚úÖ Test 10: Verificaci√≥n de intervalo
findstr /C:"6 * 60 * 60 * 1000" "src\background\updateChecker.js" >nul
if %errorlevel%==0 (
    echo    ‚úì Intervalo de 6 horas configurado
) else (
    echo    ‚ùå ERROR: Intervalo no configurado correctamente
)
echo.

echo ========================================
echo TESTING COMPLETADO
echo ========================================
echo.
echo üìù Pasos de testing manual:
echo    1. Cargar la extensi√≥n en Chrome
echo    2. Verificar en console que updateChecker se inicializa
echo    3. Hacer un commit y push al repositorio
echo    4. Esperar o forzar verificaci√≥n (recargar extensi√≥n)
echo    5. Abrir popup - debe aparecer banner verde arriba
echo    6. Click en "Ver cambios" - debe abrir GitHub
echo    7. Click en "X" - banner debe desaparecer
echo    8. Reabrir popup - banner NO debe aparecer
echo.
echo üí° Para testing r√°pido:
echo    - En DevTools console del background:
echo      updateChecker.forceCheck()
echo    - Luego abrir popup para ver banner
echo.
pause
